#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Book {
    int id;
    char title[50];
    char author[50];
    struct Book *next;
};

struct Book *head = NULL;

// Function to add a new book
void addBook(int id, char title[], char author[]) {
    struct Book *newBook = (struct Book*) malloc(sizeof(struct Book));
    newBook->id = id;
    strcpy(newBook->title, title);
    strcpy(newBook->author, author);
    newBook->next = head;
    head = newBook;
    printf("\nBook added successfully!\n");
}

// Function to display all books
void displayBooks() {
    struct Book *temp = head;
    if (temp == NULL) {
        printf("\nNo books available.\n");
        return;
    }
    printf("\n--- Library Books ---\n");
    while (temp != NULL) {
        printf("ID: %d | Title: %s | Author: %s\n", temp->id, temp->title, temp->author);
        temp = temp->next;
    }
}

// Function to search a book by ID
void searchBook(int id) {
    struct Book *temp = head;
    while (temp != NULL) {
        if (temp->id == id) {
            printf("\nBook Found:\nID: %d | Title: %s | Author: %s\n", temp->id, temp->title, temp->author);
            return;
        }
        temp = temp->next;
    }
    printf("\nBook not found.\n");
}

// Function to delete a book by ID
void deleteBook(int id) {
    struct Book *temp = head, *prev = NULL;

    if (temp != NULL && temp->id == id) {
        head = temp->next;
        free(temp);
        printf("\nBook deleted successfully!\n");
        return;
    }

    while (temp != NULL && temp->id != id) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("\nBook not found.\n");
        return;
    }

    prev->next = temp->next;
    free(temp);
    printf("\nBook deleted successfully!\n");
}

int main() {
    int choice, id;
    char title[50], author[50];

    do {
        printf("\n===== Library Book Management System =====\n");
        printf("1. Add Book\n2. Display Books\n3. Search Book\n4. Delete Book\n5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // consume newline

        switch (choice) {
            case 1:
                printf("Enter Book ID: ");
                scanf("%d", &id);
                getchar();
                printf("Enter Book Title: ");
                fgets(title, 50, stdin);
                title[strcspn(title, "\n")] = '\0';
                printf("Enter Author Name: ");
                fgets(author, 50, stdin);
                author[strcspn(author, "\n")] = '\0';
                addBook(id, title, author);
                break;
            case 2:
                displayBooks();
                break;
            case 3:
                printf("Enter Book ID to Search: ");
                scanf("%d", &id);
                searchBook(id);
                break;
            case 4:
                printf("Enter Book ID to Delete: ");
                scanf("%d", &id);
                deleteBook(id);
                break;
            case 5:
                printf("\nExiting the program.\n");
                break;
            default:
                printf("\nInvalid choice! Please try again.\n");
        }
    } while (choice != 5);

    return 0;
}